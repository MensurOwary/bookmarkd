{"version":3,"sources":["Utils.ts","ChromeInterations.ts","components/BookmarkItem.tsx","components/FeaturedBookmarkItem.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["makeDbObj","obj","bookmarkieDatabase","JSON","stringify","saved","withStore","callback","store","chrome","storage","sync","get","bookmarks","parse","markAsDone","bookmarkId","b","id","done","set","deleteBookmark","filter","x","BookmarkItem","props","className","href","title","url","target","actionBtn","find","newBookmarks","onDoneSuccess","onDeleteSuccess","icon","doOnClick","onClick","FeaturedBookmarkItem","actions","style","float","textClassName","closeIcon","revealIcon","fontStyle","description","App","useState","setBookmarks","undefined","featured","setFeatured","noBookmarks","setNoBookmarks","refreshItems","displayItems","input","length","featuredBookmark","rest","useEffect","onChanged","addListener","changes","areaName","includes","newValue","noBooks","map","renderBody","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2380a75e.chunk.js","sourcesContent":["export function makeDbObj(obj: Bookmarked[]): BookmarkedDbObject {\r\n    return {\r\n        bookmarkieDatabase: JSON.stringify({\r\n            saved: obj,\r\n        }),\r\n    };\r\n}\r\n\r\nexport function withStore(callback: (store: chrome.storage.StorageArea, bookmarks: Bookmarked[]) => void) {\r\n    const store = chrome.storage.sync;\r\n    store.get([\"bookmarkieDatabase\"], ({ bookmarkieDatabase }) => {\r\n        const bookmarks: Bookmarked[] = JSON.parse(bookmarkieDatabase).saved\r\n        callback(store, bookmarks);\r\n    });\r\n}\r\n\r\nexport function parseNow(input: string): {\r\n    saved: Bookmarked[]\r\n} {\r\n    return JSON.parse(input)\r\n}\r\n\r\nexport interface BookmarkedDbObject {\r\n    bookmarkieDatabase: string\r\n}\r\n\r\nexport interface Bookmarked {\r\n    id: string,\r\n    title: string,\r\n    url: string,\r\n    done: boolean,\r\n    description: string\r\n}","import { withStore, makeDbObj } from \"./Utils\";\r\n\r\nexport function markAsFeatured(bookmarkId: string) {\r\n    withStore((store, bookmarks) => {\r\n        const b = bookmarks.find((x) => x.id === bookmarkId && !x.done);\r\n        const newBookmarks = bookmarks.filter((x) => x.id !== bookmarkId);\r\n        store.set(makeDbObj([b!!, ...newBookmarks]));\r\n    });\r\n}\r\n\r\nexport function markAsDone(bookmarkId: string, callback: () => void) {\r\n    withStore((store, bookmarks) => {\r\n        for (let b of bookmarks) {\r\n            if (b.id === bookmarkId) {\r\n                b.done = true;\r\n            }\r\n        }\r\n        store.set(makeDbObj(bookmarks), callback);\r\n    });\r\n}\r\n\r\nexport function deleteBookmark(bookmarkId: string, callback: () => void) {\r\n    withStore((store, bookmarks) => {\r\n        store.set(\r\n            makeDbObj(bookmarks.filter((x) => x.id !== bookmarkId)),\r\n            callback\r\n        );\r\n    });\r\n}\r\n","import \"materialize-css/dist/css/materialize.min.css\";\r\nimport \"materialize-css\";\r\nimport React from 'react'\r\nimport { CollectionItem } from \"react-materialize\";\r\nimport { deleteBookmark, markAsDone, markAsFeatured } from \"../ChromeInterations\";\r\n\r\nexport default function BookmarkItem(props: {\r\n    id: string,\r\n    title: string,\r\n    url: string,\r\n    done: boolean,\r\n    description: string,\r\n    onDoneSuccess: () => void,\r\n    onDeleteSuccess: () => void,\r\n}) {\r\n    return (\r\n        <CollectionItem className=\"customized\" key={props.id} href={\"\"}>\r\n            <a\r\n                className=\"primary-content\"\r\n                title={props.title}\r\n                href={props.url}\r\n                target=\"_blank\"\r\n            >\r\n                {props.title}\r\n            </a>\r\n            <div className=\"other-content\">\r\n                {actionBtn(\"bookmark\", () => { markAsFeatured(props.id) })}\r\n                {actionBtn(\"done\", () => { markAsDone(props.id, props.onDoneSuccess) })}\r\n                {actionBtn(\"delete\", () => { deleteBookmark(props.id, props.onDeleteSuccess) })}\r\n            </div>\r\n        </CollectionItem>\r\n    )\r\n}\r\n\r\nfunction actionBtn(icon: string, doOnClick: () => void) {\r\n    return (\r\n        <i className=\"material-icons action-btn\" onClick={doOnClick}>\r\n            {icon}\r\n        </i>\r\n    )\r\n}","import React from \"react\";\r\nimport { Card, Icon } from \"react-materialize\";\r\nimport { deleteBookmark, markAsDone } from \"../ChromeInterations\";\r\n\r\nexport function FeaturedBookmarkItem(props: {\r\n    id: string,\r\n    title: string,\r\n    url: string,\r\n    done: boolean,\r\n    description: string,\r\n    onDoneSuccess: () => void,\r\n    onDeleteSuccess: () => void,\r\n}) {\r\n    return (\r\n        <div id=\"featured\">\r\n            <div className=\"col s12 m6\">\r\n                <Card\r\n                    actions={[\r\n                        <a\r\n                            href={props.url}\r\n                            className=\"dark-orange-text\"\r\n                            key=\"featured-read-more\"\r\n                        >\r\n                            Read more\r\n                                </a>,\r\n                        <span\r\n                            className=\"action-buttons\"\r\n                            style={{\r\n                                float: \"right\",\r\n                            }}\r\n                            key=\"featured-action-span\"\r\n                        >\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"dark-orange-text\"\r\n                                key=\"featured-done\"\r\n                                onClick={() => { markAsDone(props.id, props.onDoneSuccess) }}\r\n                            >\r\n                                Done\r\n                                    </a>\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"dark-orange-text\"\r\n                                key=\"featured-delete\"\r\n                                onClick={() => { deleteBookmark(props.id, props.onDeleteSuccess) }}\r\n                            >\r\n                                Delete\r\n                                    </a>\r\n                        </span>,\r\n                    ]}\r\n                    className=\"featured-item\"\r\n                    textClassName=\"blue-text\"\r\n                    title={props.title}\r\n                    closeIcon={<Icon key=\"dhasbdhjasbdaj\">close</Icon>} // todo: should delete this\r\n                    revealIcon={<Icon key=\"dasdasda\">more_vert</Icon>} // todo: should delete this\r\n                >\r\n                    <p\r\n                        className=\"card-description\"\r\n                        style={{\r\n                            fontStyle: \"italic\",\r\n                        }}\r\n                    >\r\n                        {props.description}\r\n                    </p>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import \"./App.css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css\";\nimport React, { useState, useEffect } from 'react'\nimport { Collection } from \"react-materialize\";\nimport BookmarkItem from \"./components/BookmarkItem\";\nimport { Bookmarked, parseNow } from \"./Utils\";\nimport { FeaturedBookmarkItem } from \"./components/FeaturedBookmarkItem\";\n\nexport default function App() {\n\n    const [bookmarks, setBookmarks] = useState<Bookmarked[]>([]);\n    const [featured, setFeatured] = useState<Bookmarked | undefined>(undefined);\n    const [noBookmarks, setNoBookmarks] = useState<boolean>(true);\n\n    function refreshItems() {\n        chrome.storage.sync.get(({ bookmarkieDatabase }) => {\n            displayItems(bookmarkieDatabase)\n        })\n    }\n\n    function displayItems(bookmarkieDatabase: string) {\n        let noBookmarks: boolean;\n        if (bookmarkieDatabase) {\n            const { saved } = parseNow(bookmarkieDatabase)\n            noBookmarks = saved.length === 0;\n            if (!noBookmarks) {\n                const [featuredBookmark, ...rest] = saved.filter(b => !b.done)\n                setFeatured(featuredBookmark)\n                setBookmarks(rest)\n            }\n        } else {\n            noBookmarks = true;\n        }\n        setNoBookmarks(noBookmarks)\n    }\n\n    useEffect(refreshItems, [])\n\n    useEffect(() => {\n        chrome.storage.onChanged.addListener((changes, areaName) => {\n            if ([\"local\", \"sync\"].includes(areaName)) {\n                const dbStr = changes.bookmarkieDatabase.newValue;\n                displayItems(dbStr)\n            }\n        })\n    }, [])\n\n    function renderBody(featured: Bookmarked | undefined, bookmarks: Bookmarked[], noBooks: boolean) {\n        if (noBooks) {\n            return (<p className=\"center\">no bookmarks</p>)\n        } else {\n            return (<div>\n                <FeaturedBookmarkItem {...featured!!}\n                    onDoneSuccess={refreshItems}\n                    onDeleteSuccess={refreshItems} />\n                <Collection >\n                    {bookmarks.map((b) => {\n                        return (\n                            <BookmarkItem {...b}\n                                onDoneSuccess={refreshItems}\n                                onDeleteSuccess={refreshItems}\n                            />\n                        )\n                    })}\n                </Collection>\n            </div>)\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"center-align app-title\">bookmarkd</h1>\n\n            <div className=\"container\" id=\"root\">\n                {renderBody(featured, bookmarks, noBookmarks)}\n                <div id=\"doneItems\"></div>\n            </div>\n        </div>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}